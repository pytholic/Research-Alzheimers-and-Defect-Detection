    '''def fit(self, *args, **kwargs):
        """
        Trains the model on data generated batch-by-batch using the siamese network generator function.
        Redirects arguments to the fit_generator function.
        """
        x_train = args[0]
        y_train = args[1]
        x_test, y_test = kwargs.pop('validation_data')
        batch_size = kwargs.pop('batch_size')

        train_generator = self.__pair_generator(x_train, y_train, batch_size)
        train_steps = max(len(x_train) / batch_size, 1)
        test_generator = self.__pair_generator(x_test, y_test, batch_size)
        test_steps = max(len(x_test) / batch_size, 1)
        self.siamese_model.fit_generator(train_generator,
                                         steps_per_epoch=train_steps,
                                         validation_data=test_generator,
                                         validation_steps=test_steps, **kwargs)'''
        
    '''def fit(self, **kwargs):
        """
        Trains the model on data generated batch-by-batch using the siamese network generator function.
        Redirects arguments to the fit_generator function.
        """
        #train_ds = args[0]
        #validation_data = *args[1]

        #train_generator = self.__pair_generator(x_train, y_train, batch_size)
        #train_steps = max(len(x_train) / batch_size, 1)
        #test_generator = self.__pair_generator(x_test, y_test, batch_size)
        #test_steps = max(len(x_test) / batch_size, 1)
        #self.siamese_model.fit(**kwargs)'''
